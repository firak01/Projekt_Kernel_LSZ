'muss rein, damit alle Funktionen global erreichbar sind. Als .lss Datei raus, wie auch alle Use-Einbindungen
'%INCLUDE "C:\1fgl\workspace\Eclipse3FGL\LSZKernel\libkernel\ZAPI.Basic.Asset.lss"
'Use "ZCore.Element.."

Class StructZZZ As ObjectZZZ
	Private objSession As Notessession
	Private sAlias As String
	 
	'### Die Version des ganzen Kernels
	Public Property Get KernelVersionText As String
		KernelVersionText = ""
	End Property
	Public Property Get KernelVersion As String
		KernelVersion = "3.0"
	End Property
	Public Property Get KernelVersionDate As String
		KernelVersionDate = "10.03.2005"
	End Property
	
	'### Die Version DIESES Objekts und der Klassenname
	Public Property Get ClassNameParent As String
		ClassNameParent = ObjectZZZ..ClassName
	End Property
	Public Property Get ClassLibrary As String
		ClassLibrary = "ZCore.Inherit"
	End Property
	Public Property Get VersionText As String
		VersionText = ""
	End Property
	Public Property Get Version As String
		Version = "1.0"
	End Property
	Public Property Get VersionDate As String
		VersionDate = "11.03.2006"
	End Property
	
	
	'#############################
	Property Get session As notessession
		Set session = Me.objsession
	End Property
	Property Set session As NotesSession
		Set Me.objsession = session
	End Property
	Property Get Aliasname As String
		Aliasname = Me.sAlias
	End Property
	Property Set Aliasname As String
		Me.sAlias = Ucase(Aliasname)
	End Property
	
	Sub new(session As notessession, sAliasin As String, vFlagToSet As Variant, sflag As String)
		Call structnew_(Me, session, saliasin, vFlagToSet, sflag)
	End Sub
	
	
	
End Class
Sub Initialize
	
End Sub

Private Function structnew_(objStruct As StructZZZ, sessionin As NotesSession, sAliasin As String, vFlagToSet As Variant, sFlagin As String) As Boolean
	On Error Goto errobj
	If objStruct.Error.iCode > 0 Then Error iERR_OBJECT_PAR, objStruct.MessageAllReceive(Nothing, iMSG_TYPE_ERROR, "") 	'Falls in dem Constructor der Elternklasse ein Fehler aufgetreten ist
	
	Dim btemp, stemp, itemp', vtemp, ltemp, dtemp
	Dim tpcall As TypeParamZZZ
	
	'+++ Interne Flags auf default setzen (default = true)
	'hier: nix
	'...
	
	'### Besonderheit, hier wird auch bei "Init" als Flag die Session Property gefüllt. Das ist einfach sicherer.
	If sessionIn Is Nothing Then
		Set objStruct.session = New notessession
	Else
		Set objStruct.session = sessionin
	End If
	
	'+++ weiter Flags setzen
	If Not Isnull(vFlagToSet) Then
		Dim saTemp() As String
		Dim iCounter As Integer
		itemp = ArrayStringFromVariantZZZ(objStruct.session, vFlagToSet, saTemp, tpcall,"")
		If tpcall.ierr > 0 Then Error iERR_FUNCTION_CALL, tpcall.serr
		For iCounter = 0 To itemp
			Call objStruct.flagset(saTemp(iCounter), True)
		Next			
		If objStruct.flagget("init") = True Then Goto EndTrue
	End If
	
	'### Übergabeparameter prüfen (generell)	
%REM hier nix zu tun
	If Len(sFlagControlin) > 0 Then
		Dim sFlagControl As String
		sFlagControl = Ucase(sFlagControlin) 		
		If sFlagControl <> "CREATE" And sFlagControl <> "CREATEVERSION" And sFlagControl <> "NOPROOF" Then
			Error iERR_PARAM_VALUE,  "FlagControl -->'" & sFlagControlIn & "', but expected 'CREATE','CREATEVERSION','APPEND','NOPROOF'"
		End If	
	End If
%ENDREM
	
	'### Übergabeparameter prüfen (special)
	Dim sAlias As String
	sAlias = Trim(sAliasin)
	If Len(sAlias) = 0 Then Error iERR_PARAM_MISSING, "Aliasname"
	
	'#############################
	
	objStruct.Aliasname = sAlias
	
'###############################
EndTrue:
	objStruct.Error.iCode = 0
	StructNew_ =  True
	Exit Function
EndFalse:
	objStruct.Error.iCode = 0
	StructNew_ =  False
	Exit Function
EndError:
	StructNew_ =  False
	Exit Function
Errobj:
	Dim tp As TypeParamZZZ, tperrh As TypeParamZZZ
	tp.ierr = Err 'Beim wiederholten Aufruf (d.h. zwei Zeilen hintereinanger ' Error iERR_NEXT, "das ist ein text" ' aufrufen) verliert Err zwei Stellen von rechts nach dem Aufruf der MEthode objMe.MessageAppend(..) !!!! 
	Select Case tp.ierr
	Case iASSERT_FALSE, iASSERT_TRUE: Resume Next  'd.h. es soll keine Information über den Message oder den Error Kanals ausgegeben werden.
	Case iASSERT_FALSE_CRITICAL: Resume EndFalse
	End Select
	
	If tp.iErr = iMSG_ASSERT_TRUE Or tp.iErr = iERR_ASSERT_TRUE Then 'Or tp.iErr = iERR_ASSERT_TRUE_CRITICAL Then 
		tp.serr = "Assertion negative: '" & Error$ & "'"
	Else
		tp.serr = Error$
	End If
	
	Dim sScript
	sScript = ObjStruct.ClassLibrary & "\" & Getthreadinfo(LSI_THREAD_PROC)	
	Call ObjStruct.MessageAppend("",sScript,Erl,tp.serr, tp.ierr, "")
	Select Case tp.ierr
	Case iMSG_NEXT, iERR_NEXT, iMSG_AGENT_NEXT, iERR_AGENT_NEXT, iMSG_ASSERT_TRUE, iERR_ASSERT_TRUE, iMSG_ASSERT_FALSE, iERR_ASSERT_FALSE: Resume Next
	Case iMSG_TRUE, iERR_TRUE, iMSG_AGENT_TRUE, iERR_AGENT_TRUE: Resume EndTrue  ', iMSG_ASSERT_TRUE_CRITICAL, iERR_ASSERT_TRUE_CRITICAL: Resume EndTrue
	Case iMSG_FALSE, iERR_FALSE, iMSG_AGENT_FALSE, iERR_AGENT_FALSE, iMSG_ASSERT_FALSE_CRITICAL, iERR_ASSERT_FALSE_CRITICAL: Resume EndFalse
	Case iERR_OBJECT_ERR, iERR_OBJECT_CUR, iERR_AGENT_CALL, iERR_FUNCTION_CALL, iERR_PARAM_VALUE, iERR_PARAM_MISSING, iERR_PROPERTY_VALUE, iERR_PROPERTY_MISSING, iERR_DESIGN_MISSING: Resume EndError 'Ziel: Nicht jeden Fehler ins Log stellen
	Case Else:  
		'MSG2SinkSendZZZ(sessionin As NotesSession, sSinkAliasin As String, doc2usein As NotesDocument, sFilePath_FormIn As String, sFilename_ItemIn As String, sMessageIn As String,  iMSGLevelin As Integer, tP As TypeParamZZZ, sFlag As String) As String
		Call MSG2SinkSendZZZ(objStruct.session, "", Nothing, "", "",  ObjStruct.Error.sString, 1, tperrh, "")
		'ODER: Msgbox "An error happened, more here: " & Chr(13) & "'" & MSG2SinkSendZZZ(objStruct.session, "", Nothing, "", "",  ObjStruct.Error.sString, 1, tperrh, "") & "'"
		If tperrh.iErr > 0 Then Msgbox tperrh.sErr   'Fehler im Errorhandling sofort ans Frontend/Serverlog ausgeben		
		Resume EndError
	End Select
End Function
